name: CI-CD

on:
  push:
    branches: ["stage"]

env:
  REGISTRY: cachac
  IMAGE_NAME: kubelabs_publicapi_test
  OPS_BRANCH: main
  OPS_REPO: cachac/ops

jobs:
  build:
    runs-on: ubuntu-latest

    outputs:
      RELEASE_VERSION: ${{ steps.tagVersion.outputs.RELEASE_VERSION }}

    steps:
      - uses: actions/checkout@v3 # checkout github code
        name: Checkout code
        with:
          fetch-depth: 0 # fetch tags

      - name: Get TAG version
        run: echo "RELEASE_VERSION=$(git tag --sort=-creatordate | head -1 )" >> $GITHUB_ENV
        # commit hash
        # run: echo "RELEASE_VERSION=$(git rev-parse --short HEAD)" >> $GITHUB_ENV

      # step 5
      # - name: Show new tag
      #   run: |
      #     echo ${{ env.RELEASE_VERSION }}

      - name: Show New Tag
        id: tagVersion
        run: |
          echo ${{ env.RELEASE_VERSION }}
          echo "RELEASE_VERSION=${{ env.RELEASE_VERSION }}" >> $GITHUB_OUTPUT
        # set-output DEPRECATED
        # echo "::set-output name=RELEASE_VERSION::${{ env.RELEASE_VERSION }}"

      - name: Login to DockerHub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Build & Push
        uses: docker/build-push-action@v3
        with:
          push: true
          # file: ./path-to-dockerfile
          tags: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:${{ env.RELEASE_VERSION }}
          build-args: |
            APP_ENV=${{ secrets.APP_ENV }}

      # DOCKER RUN to test container
      # - name: Run test
      #   run: docker run --rm --name api -p 3000:3000 ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:latest

      # EXTRA
      # - uses: "marvinpinto/action-automatic-releases@latest"
      #   name: Release
      #   with:
      #     repo_token: "${{ secrets.GITHUB_TOKEN }}"
      #     automatic_release_tag: ${{ env.VERSION }}
      #     title: ${{ env.RELEASE }}
      #     prerelease: false

  deploy:
    name: deploy
    runs-on: ubuntu-latest
    needs: build

    env:
      VERSION: ${{ needs.build.outputs.RELEASE_VERSION }}

    steps:
      - name: Checkout OPS code
        uses: actions/checkout@v3
        with:
          repository: ${{ env.OPS_REPO }}
          ssh-key: ${{ secrets.OPS_TOKEN }}

      - name: Setup Kustomize
        uses: imranismail/setup-kustomize@v2
        with:
          kustomize-version: "3.6.1"

      - name: Update Kubernetes resources
        run: |
          cd public-api/overlays/stage
          kustomize edit set image KUSTOMIZE-DEFINED=${{ secrets.DOCKER_USERNAME }}/${{ env.IMAGE_NAME }}:${{ env.VERSION }}

          # Optional: check yaml files Kustomized
          kustomize build . > kustomized-apps.yml
          cat kustomized-apps.yml

      - name: Commit files
        run: |
          git config --local user.email "OPS-bot@stotylabs.dev"
          git config --local user.name "Storylabs OPS-Bot"
          git add .
          git diff-index --quiet HEAD || git commit -am "New image version. Branch staging. tag: ${{ env.VERSION }}"
          git push --force origin ${{ env.OPS_BRANCH }}
